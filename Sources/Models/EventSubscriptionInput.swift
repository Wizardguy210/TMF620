//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Sets the communication endpoint address the service instance must use to deliver notification information */
public class EventSubscriptionInput: APIModel {

    /** The callback being registered. */
    public var callback: String

    /** additional data to be passed */
    public var query: String?

    public init(callback: String, query: String? = nil) {
        self.callback = callback
        self.query = query
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        callback = try container.decode("callback")
        query = try container.decodeIfPresent("query")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(callback, forKey: "callback")
        try container.encodeIfPresent(query, forKey: "query")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EventSubscriptionInput else { return false }
      guard self.callback == object.callback else { return false }
      guard self.query == object.query else { return false }
      return true
    }

    public static func == (lhs: EventSubscriptionInput, rhs: EventSubscriptionInput) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
